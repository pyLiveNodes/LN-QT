stages:
  - clean
  - test
  - deploy


format:
  stage: clean
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.12-slim
  before_script:
    - python -m pip install yapf toml
  script:
    - yapf -ri ./src ./tests

test:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/ubuntu:24.04
  cache:
    key: tox-test
    paths:
      - .tox
  variables:
    DEBIAN_FRONTEND: 'noninteractive'
  before_script:
    - apt-get update && apt-get install git python3 python3-pip python3.12-venv python3-opencv --no-install-recommends -y
    - pip install -U pip wheel setuptools cython
    - pip install -r requirements_setup.txt
  script:
    - tox -e py312
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  artifacts:
    when: always
    reports:
      junit: dist/tests/report.xml
      coverage_report: 
        coverage_format: cobertura
        path: dist/tests/coverage.xml


pages:
  stage: deploy
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/ubuntu:24.04
  cache:
    key: tox-docs
    paths:
      - .tox
  variables:
    DEBIAN_FRONTEND: 'noninteractive'
  before_script:
    - apt-get update && apt-get install git python3 python3-pip python3.12-venv python3-opencv --no-install-recommends -y
    - pip install -r requirements_setup.txt
  script:
    - tox -e docs
  after_script:
    - mv dist/docs/ public/
  artifacts:
    paths:
    - public
  only: 
    - tags


build-package:
  stage: deploy
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/ubuntu:24.04
  variables:
    DEBIAN_FRONTEND: 'noninteractive'
  before_script:
    - apt-get update && apt-get install git python3 python3-pip python3.12-venv python3-opencv --no-install-recommends -y
    - pip install twine build
  script:
    - python3 -m build --wheel
    - TWINE_PASSWORD=${TWINE_PASSWORD} TWINE_USERNAME=${TWINE_USERNAME} python3 -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  only: 
    - tags
