stages:
  - clean
  - test
  - deploy


format:
  stage: clean
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9-slim
  before_script:
    - python -m pip install yapf toml
  script:
    - yapf -ri ./src ./tests


test:
  stage: test
  # TODO: build a custom image for this, needs to include biokit stuff in the future as well...
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/ubuntu:20.04
  script:
    - tox -e py38
  variables:
    DEBIAN_FRONTEND: 'noninteractive'
  before_script:
    - apt-get update && apt-get install git python3 python3-pip python3.8-venv python3-opencv --no-install-recommends -y
    - pip install -r requirements_setup.txt
  artifacts:
    when: always
    reports:
      junit: dist/tests/report.xml
      # current gitlab is: 14.0.12, this is available starting in 14.10.x
      # coverage_report: 
      #   coverage_format: cobertura
      #   path: dist/tests/coverage.xml


pages:
  stage: deploy
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/ubuntu:20.04
  cache:
    key: tox-docs
    paths:
      - .tox
  variables:
    DEBIAN_FRONTEND: 'noninteractive'
  before_script:
    - apt-get update && apt-get install git python3 python3-pip python3.8-venv python3-opencv --no-install-recommends -y
    - pip install -r requirements_setup.txt
  script:
    - tox -e docs
  after_script:
    - mv dist/docs/ public/
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH


build-package:
  stage: deploy
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/ubuntu:20.04
  variables:
    DEBIAN_FRONTEND: 'noninteractive'
  before_script:
    - apt-get update && apt-get install git python3 python3-pip python3.8-venv python3-opencv --no-install-recommends -y
    - pip install twine build
  script:
    - python3 -m build --wheel
    - TWINE_PASSWORD=${TWINE_PASSWORD} TWINE_USERNAME=${TWINE_USERNAME} python3 -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  only:
    - tags